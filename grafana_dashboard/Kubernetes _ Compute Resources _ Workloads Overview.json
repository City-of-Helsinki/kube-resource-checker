{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "prometheus",
        "uid": "PBFA97CFB590B2093"
      },
      "description": "Kubernetes workloads memory and cpu usage (max, avg, min), request and limit. This helps to clarify correct request and limit values for Kubernetes deployment.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "transparent",
            "mode": "fixed"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "filterable": false,
            "inspect": false,
            "minWidth": 100
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Value #mem_avg"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Memory average"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value #mem_max"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Memory max"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value #mem_min"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Memory min"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value #mem_req"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Memory request"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value #mem_limit"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Memory limit"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value #cpu_avg"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Cpu average"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value #cpu_max"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Cpu max"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value #cpu_min"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Cpu min"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value #cpu_req"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Cpu request"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value #cpu_limit"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Cpu limit"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/Memory/"
            },
            "properties": [
              {
                "id": "unit",
                "value": "mbytes"
              },
              {
                "id": "custom.align",
                "value": "center"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "purple",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.displayMode",
                "value": "color-background"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/Cpu/"
            },
            "properties": [
              {
                "id": "unit",
                "value": "suffix:m"
              },
              {
                "id": "custom.align",
                "value": "center"
              },
              {
                "id": "custom.displayMode",
                "value": "color-background"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "namespace"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 180
              },
              {
                "id": "displayName",
                "value": "Namespace"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "workload"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Workload"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "workload_type"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Workload Type"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Time"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 34,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "options": {
        "footer": {
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": true
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "Namespace"
          }
        ]
      },
      "pluginVersion": "8.5.3",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PBFA97CFB590B2093"
          },
          "exemplar": false,
          "expr": "max(\n    max_over_time(container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"\", container!=\"\", image!=\"\"}[$__range])/1024/1024 \n  * on(namespace,pod) \n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"\"}\n) by (namespace, workload, workload_type)\n",
          "format": "table",
          "hide": false,
          "instant": true,
          "interval": "",
          "intervalFactor": 2,
          "legendFormat": "",
          "refId": "mem_max"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PBFA97CFB590B2093"
          },
          "exemplar": false,
          "expr": "avg( avg_over_time(\n    container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"\", container!=\"\", image!=\"\"}[$__range])/1024/1024 \n  * on(namespace,pod) \n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"\"}\n) by (namespace, workload, workload_type)",
          "format": "table",
          "hide": false,
          "instant": true,
          "interval": "",
          "legendFormat": "",
          "refId": "mem_avg"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PBFA97CFB590B2093"
          },
          "exemplar": false,
          "expr": "min(\n    min_over_time(container_memory_working_set_bytes{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"\", container!=\"\", image!=\"\"}[$__range])/1024/1024 \n  * on(namespace,pod) \n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"\"}\n) by (namespace, workload, workload_type)",
          "format": "table",
          "hide": false,
          "instant": true,
          "interval": "",
          "intervalFactor": 2,
          "legendFormat": "",
          "refId": "mem_min"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PBFA97CFB590B2093"
          },
          "exemplar": false,
          "expr": "sum(\n  kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"\", resource=\"memory\"}/1024/1024 \n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"\"}\n) by (namespace, workload, workload_type) / count(\n    kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"\", resource=\"memory\"}/1024/1024 \n  * on(namespace,pod) \n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"\"}\n) by (namespace, workload, workload_type)\n",
          "format": "table",
          "hide": false,
          "instant": true,
          "interval": "",
          "intervalFactor": 2,
          "legendFormat": "",
          "refId": "mem_req"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PBFA97CFB590B2093"
          },
          "exemplar": false,
          "expr": "sum(\n  kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"\", resource=\"memory\"}/1024/1024 \n* on(namespace,pod)\n  group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"\"}\n) by (namespace, workload, workload_type) / count(\n    kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"\", resource=\"memory\"}/1024/1024 \n  * on(namespace,pod) \n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"\"}\n) by (namespace, workload, workload_type)\n",
          "format": "table",
          "hide": false,
          "instant": true,
          "interval": "",
          "intervalFactor": 2,
          "legendFormat": "",
          "refId": "mem_limit"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PBFA97CFB590B2093"
          },
          "exemplar": false,
          "expr": "max( \n    max_over_time( rate( container_cpu_usage_seconds_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"\", container!=\"\", image!=\"\"}[1m])[$__range:30s])*1000\n  * on(namespace,pod) \n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"\"}\n) by (namespace, workload, workload_type)\n",
          "format": "table",
          "hide": false,
          "instant": true,
          "interval": "",
          "intervalFactor": 2,
          "legendFormat": "",
          "refId": "cpu_max"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PBFA97CFB590B2093"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "avg( \n    avg_over_time( rate( container_cpu_usage_seconds_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"\", container!=\"\", image!=\"\"}[1m])[$__range:30s])*1000\n  * on(namespace,pod) \n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"\"}\n) by (namespace, workload, workload_type)\n",
          "format": "table",
          "hide": false,
          "instant": true,
          "interval": "",
          "legendFormat": "",
          "range": false,
          "refId": "cpu_avg"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PBFA97CFB590B2093"
          },
          "exemplar": false,
          "expr": "min( \n    min_over_time( rate( container_cpu_usage_seconds_total{job=\"kubelet\", metrics_path=\"/metrics/cadvisor\", cluster=\"\", container!=\"\", image!=\"\"}[1m])[$__range:30s])*1000\n  * on(namespace,pod) \n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"\"}\n) by (namespace, workload, workload_type)",
          "format": "table",
          "hide": false,
          "instant": true,
          "interval": "",
          "intervalFactor": 2,
          "legendFormat": "",
          "refId": "cpu_min"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PBFA97CFB590B2093"
          },
          "exemplar": false,
          "expr": "sum( \n    kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"\", resource=\"cpu\"}*1000\n  * on(namespace,pod) \n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"\"}\n) by (namespace, workload, workload_type) / count( \n    kube_pod_container_resource_requests{job=\"kube-state-metrics\", cluster=\"\", resource=\"cpu\"} \n  * on(namespace,pod) \n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"\"}\n) by (namespace, workload, workload_type)",
          "format": "table",
          "hide": false,
          "instant": true,
          "interval": "",
          "intervalFactor": 2,
          "legendFormat": "",
          "refId": "cpu_req"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "PBFA97CFB590B2093"
          },
          "exemplar": false,
          "expr": "sum( \n    kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"\", resource=\"cpu\"}*1000\n  * on(namespace,pod) \n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"\"}\n) by (namespace, workload, workload_type) / count( \n    kube_pod_container_resource_limits{job=\"kube-state-metrics\", cluster=\"\", resource=\"cpu\"} \n  * on(namespace,pod) \n    group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\"\"}\n) by (namespace, workload, workload_type)\n",
          "format": "table",
          "hide": false,
          "instant": true,
          "interval": "",
          "intervalFactor": 2,
          "legendFormat": "",
          "refId": "cpu_limit"
        }
      ],
      "title": "Workload Resources",
      "transformations": [
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "convertFieldType",
          "options": {
            "conversions": [
              {
                "destinationType": "number",
                "targetField": "Value #Current memory request"
              },
              {
                "destinationType": "number",
                "targetField": "Value #Current memory limit"
              }
            ],
            "fields": {}
          }
        },
        {
          "id": "convertFieldType",
          "options": {
            "conversions": [
              {
                "destinationType": "number",
                "targetField": "Value #Current memory request"
              },
              {
                "destinationType": "number",
                "targetField": "Value #Current memory limit"
              }
            ],
            "fields": {}
          }
        }
      ],
      "type": "table"
    }
  ],
  "schemaVersion": 36,
  "style": "dark",
  "tags": [
    "kubernetes-mixin"
  ],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-1h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Kubernetes / Compute Resources / Workloads Overview",
  "version": 0,
  "weekStart": ""
}